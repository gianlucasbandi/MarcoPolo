-var ids = tweets_id

doctype html
html
  head
    meta(charset="utf-8")
    link(rel='icon' href='pic/mp.ico' type='image/icon type')
    link(rel='stylesheet', href='/css/home.css')
    script(src='https://kit.fontawesome.com/d8697e016e.js' crossorigin='anonymous')
    script(async src="https://platform.twitter.com/widgets.js" charset="utf-8")
    meta(name="viewport", content="width=device-width, initial-scale=1, shrink-to-fit=no")
    meta(name="twitter:widgets:theme" content="light")
    meta(name="twitter:widgets:border-color" content="#55acee")
    title MarcoPolo
  body
    #main
      .tweets
          if !tweetError
              each val in ids 
                  blockquote(class = "twitter-tweet")
                      a(href="https://twitter.com/x/status/"+val)
          else 
              p= tweetMsgError       

      #map

      .covid
          .city
            p(class="title") Citt√†:
            p= city
          .nation
            p(class="title") Nazione:
            p= nation         
          .stats
            p(class="title") Casi:
            p= covidCases
          if isReg
            .regionName
              p(class="title") Regione:
              p= regione
            .regionCases
              p(class="title") Casi regionali:
              p= regCas
                    
      #back
        a(class="back-btn", href="https://localhost:8083") Fai un'altra ricerca! 
          i.fas.fa-redo
      
      script.
          function initMap() {
            var lat = parseFloat("#{lat}");
            var lng = parseFloat("#{lng}");
            var location = { lat: lat, lng: lng };
            const map = new google.maps.Map(document.getElementById("map"),{
              zoom: 13,
              center: location,
            });
            var request = {
              location: location,
              radius: '1000',
              query: 'attraction'
            };
          
            service = new google.maps.places.PlacesService(map);
            service.textSearch(request, callback);
            function callback(results, status) {
              if (status == google.maps.places.PlacesServiceStatus.OK) {
                var res = Array();
                for (var i = 0; i < results.length ; i++) {
                  if(results[i].user_ratings_total >= 50){
                    res.push([results[i].rating,results[i]]);
                  }
                }
                res.sort().reverse();
                for (var i = 0; i < Math.min(10,res.length); i++) {
                  var infoWindow = new google.maps.InfoWindow();
                      const marker = new google.maps.Marker({
                        position: res[i][1].geometry.location,
                        map,
                        _myValue : '<h3>'+ res[i][1].name + '</h3>' + '<h6>Rating: '+ res[i][0] + '</h6>' + '<p>Review totali: '+ res[i][1].user_ratings_total + '</p>' + "<a href='" + res[i][1].photos[0].getUrl() + "'><img id='markerImg' src='" + res[i][1].photos[0].getUrl() + "'/></a>",
                        animation: google.maps.Animation.DROP,
                      });
                      marker.addListener("click", () => {
                        infoWindow.close();
                        infoWindow.setContent(marker._myValue);
                        infoWindow.open(marker.getMap(), marker);
                      });
                }
              }
            }
          }
    script(src="https://maps.googleapis.com/maps/api/js?key=API_KEY&libraries=places&callback=initMap") 
    
